<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.umessage.letsgo.dao.security.ResourceDao" >
    <resultMap id="BaseResultMap" type="com.umessage.letsgo.domain.po.security.ResourceEntity" >
        <id column="ID" property="id" jdbcType="BIGINT" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="res_type" property="resType" jdbcType="VARCHAR" />
        <result column="res_string" property="resString" jdbcType="VARCHAR" />
        <result column="priority" property="priority" jdbcType="INTEGER" />
        <result column="moudle" property="moudle" jdbcType="VARCHAR" />
        <result column="descn" property="descn" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="version" property="version" jdbcType="BIGINT" />
    </resultMap>
    <delete id="delete" parameterType="java.lang.Long" >
        delete from s_resource
        where ID = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.umessage.letsgo.domain.po.security.ResourceEntity" >
        insert into s_resource (ID, name, res_type, 
            res_string, priority, moudle, 
            descn, create_time, update_time, 
            version)
        values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{resType,jdbcType=VARCHAR}, 
            #{resString,jdbcType=VARCHAR}, #{priority,jdbcType=INTEGER}, #{moudle,jdbcType=VARCHAR}, 
            #{descn,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
            #{version,jdbcType=BIGINT})
    </insert>
    <update id="update" parameterType="com.umessage.letsgo.domain.po.security.ResourceEntity" >
        update s_resource
        set name = #{name,jdbcType=VARCHAR},
            res_type = #{resType,jdbcType=VARCHAR},
            res_string = #{resString,jdbcType=VARCHAR},
            priority = #{priority,jdbcType=INTEGER},
            moudle = #{moudle,jdbcType=VARCHAR},
            descn = #{descn,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            version = version + 1
        where ID = #{id,jdbcType=BIGINT} and version = #{version,jdbcType=BIGINT}
    </update>
    <select id="select" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select ID, name, res_type, res_string, priority, moudle, descn, create_time, update_time, 
        version
        from s_resource
        where ID = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap" >
        select ID, name, res_type, res_string, priority, moudle, descn, create_time, update_time, 
        version
        from s_resource
    </select>
</mapper>