<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.umessage.letsgo.dao.security.TagsDao" >
    <resultMap id="BaseResultMap" type="com.umessage.letsgo.domain.po.security.TagsEntity" >
        <id column="ID" property="id" jdbcType="BIGINT" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="version" property="version" jdbcType="BIGINT" />
        <result column="user_id" property="userId" jdbcType="BIGINT" />
    </resultMap>
    <delete id="delete" parameterType="java.lang.Long" >
        delete from s_tags
        where ID = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.umessage.letsgo.domain.po.security.TagsEntity" >
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into s_tags (name, create_time, version,user_id
            )
        values (#{name,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{version,jdbcType=BIGINT},#{userId,jdbcType=BIGINT}
            )
    </insert>
    <update id="update" parameterType="com.umessage.letsgo.domain.po.security.TagsEntity" >
        update s_tags
        set name = #{name,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            version = #{version,jdbcType=BIGINT},
            user_id= #{userId,jdbcType=BIGINT}
        where ID = #{id,jdbcType=BIGINT}
    </update>
    <select id="select" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select ID, name, create_time, version,user_id
        from s_tags
        where ID = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap" >
        select ID, name, create_time, version,user_id
        from s_tags
    </select>

    <select id="getTagNameByUserId" resultType="java.lang.String" parameterType="com.umessage.letsgo.domain.vo.security.request.TagRequest">
        SELECT t.`name` FROM s_tags as t
        LEFT JOIN s_user_tag AS us ON t.ID = us.tag_id
        WHERE us.labelling_user_id = #{labellingUserId}
        AND us.labeled_user_id = #{labeledUserId}
    </select>

    <select id="getTags" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select ID, name, create_time, version,user_id
        from s_tags
        where user_id = #{userId,jdbcType=BIGINT}
        order by create_time desc
    </select>

    <select id="getTagsByNameAndUserId" resultMap="BaseResultMap" parameterType="com.umessage.letsgo.domain.vo.security.request.TagsRequest" >
        select ID, name, create_time, version,user_id
        from s_tags
        where user_id = #{userId,jdbcType=BIGINT} and name = #{name,jdbcType=VARCHAR}
        order by create_time desc limit 1
    </select>

</mapper>