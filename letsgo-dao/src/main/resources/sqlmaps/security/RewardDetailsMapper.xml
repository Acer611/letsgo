<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.umessage.letsgo.dao.security.RewardDetailsDao" >
    <resultMap id="BaseResultMap" type="com.umessage.letsgo.domain.po.security.RewardDetailsEntity" >
        <id column="ID" property="id" jdbcType="BIGINT" />
        <result column="user_id" property="userId" jdbcType="BIGINT" />
        <result column="amount" property="amount" jdbcType="DOUBLE" />
        <result column="descn" property="descn" jdbcType="VARCHAR" />
        <result column="is_into" property="isInto" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="from_id" property="fromId" jdbcType="BIGINT" />
        <result column="reward_type" property="rewardType" jdbcType="INTEGER" />
        <result column="team_id" property="teamId" jdbcType="BIGINT" />
        <result column="reward_from" property="rewardFrom" jdbcType="INTEGER" />
    </resultMap>

    <resultMap id="RewardResultMap" type="com.umessage.letsgo.domain.po.security.RewardDetailsEntity" >
        <id column="rd_id" property="id" jdbcType="BIGINT" />
        <result column="rd_userId" property="userId" jdbcType="BIGINT" />
        <result column="rd_amount" property="amount" jdbcType="DOUBLE" />
        <result column="rd_descn" property="descn" jdbcType="VARCHAR" />
        <result column="rd_isInto" property="isInto" jdbcType="INTEGER" />
        <result column="rd_createTime" property="createTime" jdbcType="TIMESTAMP" />
        <result column="rd_fromId" property="fromId" jdbcType="BIGINT" />
        <result column="rd_reward_type" property="rewardType" jdbcType="INTEGER" />
        <result column="rd_team_id" property="teamId" jdbcType="BIGINT" />
        <result column="rd_reward_from" property="rewardFrom" jdbcType="INTEGER" />

        <result column="u_phone" property="phone" jdbcType="VARCHAR" />
        <result column="u_photoUrl" property="photoUrl" jdbcType="VARCHAR" />
        <result column="u_realName" property="realName" jdbcType="VARCHAR" />
    </resultMap>

    <delete id="delete" parameterType="java.lang.Long" >
        delete from s_reward_details
        where ID = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.umessage.letsgo.domain.po.security.RewardDetailsEntity" >
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into s_reward_details (user_id, amount, descn, 
            is_into, create_time, from_id, 
            reward_type,team_id,reward_from)
        values (#{userId,jdbcType=BIGINT}, #{amount,jdbcType=DOUBLE}, #{descn,jdbcType=VARCHAR}, 
            #{isInto,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{fromId,jdbcType=BIGINT}, 
            #{rewardType,jdbcType=INTEGER},#{teamId,jdbcType=BIGINT},#{rewardFrom,jdbcType=INTEGER})
    </insert>
    <update id="update" parameterType="com.umessage.letsgo.domain.po.security.RewardDetailsEntity" >
        update s_reward_details
        set user_id = #{userId,jdbcType=BIGINT},
            amount = #{amount,jdbcType=DOUBLE},
            descn = #{descn,jdbcType=VARCHAR},
            is_into = #{isInto,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            from_id = #{fromId,jdbcType=BIGINT},
            reward_type = #{rewardType,jdbcType=INTEGER},
            team_id = #{teamId,jdbcType=BIGINT},
            reward_from = #{rewardFrom,jdbcType=INTEGER}
        where ID = #{id,jdbcType=BIGINT}
    </update>
    <select id="select" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select ID, user_id, amount, descn, is_into, create_time, from_id, reward_type, team_id, reward_from
        from s_reward_details
        where ID = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap" >
        select ID, user_id, amount, descn, is_into, create_time, from_id, reward_type, team_id, reward_from
        from s_reward_details
    </select>

    <select id="selectWithUserId" resultMap="RewardResultMap" parameterType="java.lang.Long" >
        select rd.ID as rd_id, rd.user_id as rd_userId, rd.amount as rd_amount, rd.descn as rd_descn,
        rd.is_into as rd_isInto, rd.create_time as rd_createTime, rd.from_id as rd_fromId, rd.reward_type as rd_reward_type, rd.team_id as rd_team_id, rd.reward_from as rd_reward_from,
        u.phone as u_phone, u.photo_url as u_photoUrl, u.real_name as u_realName
        from s_reward_details as rd
        JOIN s_user as u on rd.from_id = u.ID
        where rd.user_id = #{userId,jdbcType=BIGINT} order by rd.create_time desc
    </select>


    <select id="selectCountWithUserId" resultType="java.lang.Integer" parameterType="java.lang.Long" >
        select COUNT(*)
        from s_reward_details
        where user_id = #{userId,jdbcType=BIGINT} order by create_time desc
    </select>

    <select id="selectInviteRewardByUserId" resultMap="BaseResultMap" parameterType="com.umessage.letsgo.domain.vo.security.request.RewardDetailsRequest" >
        select rd.ID, rd.user_id, rd.amount, rd.descn, rd.is_into, rd.create_time, rd.from_id, rd.reward_type, rd.team_id, rd.reward_from
        from s_reward_details as rd
        join s_user as u on rd.from_id = u.ID
        where 1=1
        <if test="null != userId">
            AND rd.user_id = #{userId,jdbcType=BIGINT}
        </if>
        <if test="null != isInto">
            AND rd.is_into = #{isInto,jdbcType=INTEGER}
        </if>
        <if test="null != fromId">
            AND rd.from_id = #{fromId,jdbcType=BIGINT}
        </if>
        <if test="null != rewardType">
            AND rd.reward_type = #{rewardType,jdbcType=INTEGER}
        </if>
        <if test="null != teamId">
            AND rd.team_id = #{teamId,jdbcType=BIGINT}
        </if>
        <if test="null != rewardFrom">
            AND rd.reward_from = #{rewardFrom,jdbcType=INTEGER}
        </if>
        <if test="null != startDate">AND DATE_FORMAT(rd.create_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startDate}, '%Y-%m-%d')</if>
        <if test="null != endDate">AND DATE_FORMAT(rd.create_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endDate}, '%Y-%m-%d')</if>
        order by rd.create_time desc
    </select>
</mapper>