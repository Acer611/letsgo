<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.umessage.letsgo.dao.team.WaitingDao" >
    <resultMap id="BaseResultMap" type="com.umessage.letsgo.domain.po.team.WaitingEntity" >
        <id column="ID" property="id" jdbcType="BIGINT" />
        <result column="user_id" property="userId" jdbcType="BIGINT" />
        <result column="leisure_date" property="leisureDate" jdbcType="LONGVARCHAR" />
        <result column="work_date" property="workDate" jdbcType="LONGVARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="version" property="version" jdbcType="BIGINT" />
    </resultMap>
    <delete id="delete" parameterType="java.lang.Long" >
        delete from t_waiting
        where ID = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.umessage.letsgo.domain.po.team.WaitingEntity" >
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_waiting (user_id, leisure_date, work_date, 
            create_time, update_time, version
            )
        values (#{userId,jdbcType=BIGINT}, #{leisureDate,jdbcType=LONGVARCHAR}, #{workDate,jdbcType=LONGVARCHAR}, 
            #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{version,jdbcType=BIGINT}
            )
    </insert>
    <update id="update" parameterType="com.umessage.letsgo.domain.po.team.WaitingEntity" >
        update t_waiting
        set user_id = #{userId,jdbcType=BIGINT},
            leisure_date = #{leisureDate,jdbcType=LONGVARCHAR},
            work_date = #{workDate,jdbcType=LONGVARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            version = #{version,jdbcType=BIGINT}
        where ID = #{id,jdbcType=BIGINT}
    </update>
    <select id="select" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select ID, user_id, leisure_date, work_date, create_time, update_time, version
        from t_waiting
        where ID = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap" >
        select ID, user_id, leisure_date, work_date, create_time, update_time, version
        from t_waiting
    </select>

    <select id="selectWithUserId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select ID, user_id, leisure_date, work_date, create_time, update_time, version
        from t_waiting
        where user_id = #{userId,jdbcType=BIGINT}
    </select>
    <select id="hasTime"  resultType="java.lang.Integer" parameterType="com.umessage.letsgo.domain.vo.team.requset.WaitingRequest">
        SELECT count(ID)
        FROM t_waiting
        WHERE work_date LIKE  CONCAT('%',#{time},'%')  AND user_id =#{userId,jdbcType=BIGINT}
    </select>
</mapper>