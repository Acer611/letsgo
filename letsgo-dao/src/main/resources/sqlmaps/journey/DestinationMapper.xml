<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.umessage.letsgo.dao.journey.DestinationDao" >
    <resultMap id="BaseResultMap" type="com.umessage.letsgo.domain.po.journey.DestinationEntity" >
        <id column="ID" property="id" jdbcType="BIGINT" />
        <result column="destination" property="destination" jdbcType="VARCHAR" />
        <result column="city" property="city" jdbcType="VARCHAR" />
        <result column="timezone" property="timezone" jdbcType="VARCHAR" />
        <result column="country" property="country" jdbcType="VARCHAR" />
        <result column="lat" property="lat" jdbcType="DOUBLE" />
        <result column="lng" property="lng" jdbcType="DOUBLE" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="version" property="version" jdbcType="BIGINT" />
    </resultMap>
    <delete id="delete" parameterType="java.lang.Long" >
        delete from j_destination
        where ID = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.umessage.letsgo.domain.po.journey.DestinationEntity" >
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into j_destination (destination, city, timezone, 
            country, lat, lng, 
            create_time, version)
        values (#{destination,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{timezone,jdbcType=VARCHAR}, 
            #{country,jdbcType=VARCHAR}, #{lat,jdbcType=DOUBLE}, #{lng,jdbcType=DOUBLE}, 
            #{createTime,jdbcType=TIMESTAMP}, #{version,jdbcType=BIGINT})
    </insert>
    <update id="update" parameterType="com.umessage.letsgo.domain.po.journey.DestinationEntity" >
        update j_destination
        set destination = #{destination,jdbcType=VARCHAR},
            city = #{city,jdbcType=VARCHAR},
            timezone = #{timezone,jdbcType=VARCHAR},
            country = #{country,jdbcType=VARCHAR},
            lat = #{lat,jdbcType=DOUBLE},
            lng = #{lng,jdbcType=DOUBLE},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            version = #{version,jdbcType=BIGINT}
        where ID = #{id,jdbcType=BIGINT}
    </update>
    <select id="select" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select ID, destination, city, timezone, country, lat, lng, create_time, version
        from j_destination
        where ID = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap" >
        select ID, destination, city, timezone, country, lat, lng, create_time, version
        from j_destination
    </select>

    <select id="selectWithDest" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select ID, destination, city, timezone, country, lat, lng, create_time, version
        from j_destination
        where destination = #{dest}
    </select>

    <select id="selectWithMultiDest" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select ID, destination, city, timezone, country, lat, lng, create_time, version
        from j_destination
        where  1=1
        <if test="list != null and list.size()>0">
        and destination in
        <foreach collection="list" separator="," index="index" item="item" open="(" close=")" >
            #{item}
        </foreach>
        </if>
    </select>
</mapper>