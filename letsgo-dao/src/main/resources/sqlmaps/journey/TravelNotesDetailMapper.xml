<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.umessage.letsgo.dao.journey.TravelNotesDetailDao" >
    <resultMap id="BaseResultMap" type="com.umessage.letsgo.domain.po.journey.TravelNotesDetailEntity" >
        <id column="ID" property="id" jdbcType="BIGINT" />
        <result column="schedule_detai_iId" property="scheduleDetaiIid" jdbcType="BIGINT" />
        <result column="travel_notes_id" property="travelNotesId" jdbcType="BIGINT" />
        <result column="weather" property="weather" jdbcType="VARCHAR" />
        <result column="schedule_detai_imgUrl" property="scheduleDetaiImgurl" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="version" property="version" jdbcType="BIGINT" />
    </resultMap>
    <delete id="delete" parameterType="java.lang.Long" >
        delete from j_travel_notes_detail
        where ID = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.umessage.letsgo.domain.po.journey.TravelNotesDetailEntity" >
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into j_travel_notes_detail (schedule_detai_iId, travel_notes_id, weather, 
            schedule_detai_imgUrl, create_time, update_time, 
            version)
        values (#{scheduleDetaiIid,jdbcType=BIGINT}, #{travelNotesId,jdbcType=BIGINT}, #{weather,jdbcType=VARCHAR}, 
            #{scheduleDetaiImgurl,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
            #{version,jdbcType=BIGINT})
    </insert>
    <update id="update" parameterType="com.umessage.letsgo.domain.po.journey.TravelNotesDetailEntity" >
        update j_travel_notes_detail
        set schedule_detai_iId = #{scheduleDetaiIid,jdbcType=BIGINT},
            travel_notes_id = #{travelNotesId,jdbcType=BIGINT},
            weather = #{weather,jdbcType=VARCHAR},
            schedule_detai_imgUrl = #{scheduleDetaiImgurl,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            version = #{version,jdbcType=BIGINT}
        where ID = #{id,jdbcType=BIGINT}
    </update>
    <select id="select" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select ID, schedule_detai_iId, travel_notes_id, weather, schedule_detai_imgUrl, create_time, 
        update_time, version
        from j_travel_notes_detail
        where ID = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap" >
        select ID, schedule_detai_iId, travel_notes_id, weather, schedule_detai_imgUrl, create_time, 
        update_time, version
        from j_travel_notes_detail
    </select>
    
    <resultMap id="getTravelsListMap" type="com.umessage.letsgo.domain.vo.journey.response.TravelsListResponse"> 
		<result property="scheduleId" column="s_id"/> 
		<collection property="travelList" ofType="com.umessage.letsgo.domain.vo.journey.response.vo.TravelNotesVo" >
			<result column="schedule_date" property="travelDate"/>  
			<result column="sd_id" property="scheduleDetailId"/>
			<result column="travel_Status" property="travelStatus"/>
		</collection> 
	</resultMap>
    <select id="getTravelsList" resultMap="getTravelsListMap" >
	    SELECT
	    	j.ID s_id,
			date_format(jsd.schedule_date,'%Y-%m-%d') schedule_date,
			jsd.ID sd_id,
			CASE WHEN exists (select 1 from j_travel_notes_detail jtnd,j_travel_notes n where jtnd.schedule_detai_iId = jsd.ID and jtnd.travel_notes_id = n.id and n.user_id = #{userId,jdbcType=BIGINT}) THEN
					1
				 ELSE
					0
				 END travel_Status
		FROM
			t_team t,
			j_schedule j,
			j_schedule_detail jsd
		WHERE
			j.team_id = t.ID
		AND j.ID = jsd.jour_id
		AND t.tx_groupId = #{txGroupId}
		and j.del=0
    </select>
    
    
    <resultMap id="getOneScheduleDetailMap" type="com.umessage.letsgo.domain.vo.journey.response.TravelNotesDetailsResponse"> 
		<result property="hotelId" column="hotel_id"/> 
		<result property="hotelName" column="hotel_name"/> 
		<result column="star_lv" property="hotelLv"/>
		<collection property="travelList" ofType="com.umessage.letsgo.domain.vo.journey.response.vo.ScenicTravelVo" >
			<result column="scenic_id" property="scenicId"/>
			<result column="name" property="scenicName"/>
		</collection> 
	</resultMap>
    <select id="getOneScheduleDetail" resultMap="getOneScheduleDetailMap" >
		SELECT
			s.id scenic_id,
			s.NAME name,
			j.hotel_id,
			j.hotel hotel_name,
			(select h.star_lv from d_hotel h where h.hotel_id = j.hotel_id) star_lv
		FROM
			j_schedule_detail j
		LEFT JOIN j_scenic s ON j.ID = s.schedule_detail_id
	   where j.ID = #{scheduleDetailId,jdbcType=BIGINT}
    </select>
</mapper>